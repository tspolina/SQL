In this project, I am querying a database with multiple tables containing customer, order and sales information. 

/* How many orders were placed in January? Filter out messy data */

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderid <> 'Order ID'; 

/* How many of those were for iPhone? */

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE product = 'iPhone'
AND length(orderID) = 6
AND orderid <> 'Order ID';

/* Select customer account numbers for all orders placed in February */

SELECT acctnum
FROM BIT_DB.customers AS cust
INNER JOIN BIT_DB.FebSales AS Feb
ON cust.order_id = Feb.orderid
WHERE length(orderID) = 6
AND orderid <> 'Order ID';

/* Which product was the cheapest one sold in January, what was the price? */

SELECT DISTINCT product, price
FROM BIT_DB.JanSales
WHERE price IN(SELECT min(price) FROM BIT_DB.JanSales)
AND length(orderID) = 6
AND orderid <> 'Order ID';


/* What is the total revenue for each product sold? */

SELECT SUM(quantity)*price AS revenue, product
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderid <> 'Order ID'
GROUP BY product;

/* Which products were sold in February at '548 Lincoln..' and what's the total revenue? */

SELECT SUM(quantity), product, SUM(quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
AND length(orderID) = 6
AND orderid <> 'Order ID'
GROUP BY product;

/* How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? */

SELECT count(distinct cust.acctnum) AS 'Number of Customers', 
avg(quantity*price) AS 'Average Price'
FROM BIT_DB.FebSales Feb 
LEFT JOIN BIT_DB.customers cust 
ON FEB.orderid=cust.order_id 
WHERE Feb.Quantity>2 
AND length(orderid) = 6 
AND orderid <> 'Order ID';

/* List all the products sold in Los Angeles in February, and include how many of each were sold. */

SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;
